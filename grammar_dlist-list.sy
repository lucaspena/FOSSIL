;; lemma to synthesize
;; TODO: must be generated from problem parameters

(synth-fun lemma ((x Int)(nil Int)) Bool

           ((Start Bool) (Rec Bool) (B Bool) (I Int))

           ((Start Bool
                  ((=> Rec B)))
           (Rec Bool
                  ((list I) (dlist I)))
           (B Bool
                  ((=> B B)
                   (and B B)
                   (or B B)
                   (not B)
                   (list I) (dlist I)))
            (I Int (x nil
                   (next I)
                   (prev I))))

)


;; Grammar for old version of code. Must be removed
;(synth-fun lemma ((x Int)) Bool
;
;           ((Start Bool) (Rec Bool) (B Bool) (I Int))
;
;           ((Start Bool
;                  ((=> Rec B)))
;           (Rec Bool
;                  ((list I) (dlist I)))
;           (B Bool
;                  ((=> B B)
;                   (and B B)
;                   (or B B)
;                   (not B)
;                   (list I) (dlist I)))
;            (I Int (x (- 1)
;                   (next I)
;                   (prev I))))
;
;)