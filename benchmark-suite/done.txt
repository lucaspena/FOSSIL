1. Theorem: dlst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => lst(ret))
   Lemma: dlst(x) => lst(x)
   SyGuS synthesis: 0.9s
   Constraint-based synthesis: 1.42s

2. Theorem: slst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => lst(ret))
   Lemma: slst(x) => lst(x)
   SyGuS synthesis: 1.01s
   Constraint-based synthesis: 1.69s

3. Theorem: sdlst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => dlst(ret))
   Lemma: sdlst(x) => dlst(x)
   SyGuS synthesis: 2.83s
   Constraint-based synthesis: 3.06s

4. Theorem: sdlst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => dlst(ret) /\ slst(ret))
   Lemmas: sdlst(x) => dlst(x)
           sdlst(x) => slst(x)
   SyGuS synthesis: 3.68s
   Constraint-based synthesis: 7.29s

5. Theorem: listlen(x, l) => (If(l == 1, ret == x, ret == nxt(x)), list(x))
   Lemmas: listlen(x, l) => list(x)
   SyGuS synthesis: 0.92s
   Constraint-based synthesis: 1.13s

6. {v1 = v2}
   while (v1 != nil) do
     v1 := n(v1);
     if (v2 != c) {v2 := n(v2)}
   endwhile
   {v2 = nil \/ v2 = c}
   Lemma: reach(x) => v2(x) == v1(x) \/ v2(x) == c)
   SyGuS synthesis: 2961.88s
   Constraint-based synthesis: 16.26s

7. {v1 = v2}
   while (v1 != nil) do
     v1 := n(v1);
     v2 := n(v2)
   endwhile
   {v2 = nil}
   Lemma: reach(x) => v2(x) == v1(x)
   SyGuS synthesis: 199.06s
   Constraint-based synthesis: 8.57s

8. {v1 = v2}
   while (v1 != c) do
     v1 := n(v1);
     if (v2 != c) {v2 := n(v2)}
   endwhile
   {v2 = nil \/ v2 = c}
   Lemma: reach(x) => v2(x) == v1(x)
   SyGuS synthesis: 626.50s
   Constraint-based synthesis: 8.32s

9. {v1 = v2}
   while (v1 != c) do
     v1 := n(v1);
     v2 := n(v2)
   endwhile
   {v2 = nil}
   Lemma: reach(x) => v2(x) == v1(x)
   SyGuS synthesis: 298.09s
   Constraint-based synthesis: 7.24s

10. {v1 = n(v2)}
    while (v1 != nil) do
      v1 := n(v1);
      if (v2 != c) {v2 := n(v2)}
    endwhile
    {n(v2) = nil \/ v2 = c}
    Lemma: reach(x) => n(v2(x)) == v1(x) \/ v2(x) == c)
    SyGuS synthesis: 3898.42s
    Constraint-based synthesis: 15.89s

11. {v1 = n(v2)}
    while (v1 != nil) do
      v1 := n(v1);
      v2 := n(v2)
    endwhile
    {n(v2) = nil}
    Lemma: reach(x) => n(v2(x)) == v1(x)
    SyGuS synthesis: 234.85s
    Constraint-based synthesis: 8.55s

12. Theorem: lseg(x, y) => (If(x == nil, ret == nil, ret == nxt(x)) => (y == nil => list(ret)))
    Lemma: lseg(x, y) => (list(y) == list(x))
    SyGuS synthesis: 12.92s
    Constraint-based synthesis: 16.85s

13. Theorem: slseg(x, y) => (If(x == nil, ret == nil, ret == nxt(x)) => (y == nil => slist(ret)))
    Lemma checked: slseg(x, y) => (slist(x) == slist(y))
    Lemma synthesized slseg(x, y) => (slist(y) => slist(x))
    SyGuS synthesis: 9.94
    Constraint-based synthesis: 7.99s

14. Theorem: lseg(x, y) => (list(y) /\ x != c /\ next(y) == z => (lseg(x, z) /\ list(z)))
    Lemma: lseg(x, y) => (lseg(y, z) => lseg(x, z))
    SyGuS synthesis: 901.26s (large grammar restriction)
    Constraint-based synthesis: 11.67s

15. Theorem: lseg(x, y) => (key(x) != k /\ lseg(y, z) => lseg(x, z))
    Lemma: lseg(x, y) => (lseg(y, z) => lseg(x, z))
    SyGuS synthesis: 1711.89s (large grammar restriction)
    Constraint-based synthesis: 27.33s

16. Theorem: lseg(x, y) => (key(x) != k /\ lseg(x, z) => lseg(y, z) \/ lseg(z, y))
    Lemma: lseg(x, y) => (lseg(x, z) => lseg(y, z) \/ lseg(z, y))
    SyGuS synthesis: 285.68s
    Constraint-based synthesis: 9.27s

17. Theorem: bst(x) => ((x != nil /\ y \in hbst(lft(x)) /\ z \in hbst(rght(x))) => key(y) <= key(z))
    Lemmas: bst(x) => (y \in hbst(x) => key(y) <= max(x))
            bst(x) => (y \in hbst(x) => min(x) <= key(y))
    SyGuS synthesis: Theorem not proved, 1 hour timeout
    Constraint-based synthesis: 582.07s
      - Lemma 2 instead was bst(x) => (y \in hbst(x) => min(x) <= min(y))

18. Theorem: bst(x) => ((x != nil /\ k \in keys(x) /\ k < key(x)) => k \in keys(lft(x)))
    Lemma: bst(x) => ((x != nil /\ k \in keys(x)) => minrr(x) <= k /\ minr(x) <= k)
    SyGuS synthesis: Theorem not proved, 1 hour timeout
    Constraint-based synthesis: 156.96s
     - Lemma instead was: bst(x) => (k \in keys(x) => minr(x) <= k)

19. Theorem: bst(x) => ((x != nil /\ k \in keys(x) /\ k > key(x)) => k \in keys(rght(x)))
    Lemma: bst(x) => ((x != nil /\ k \in keys(x)) => minr(x) <= k /\ k <= maxr(x))
    SyGuS synthesis: Theorem not proved, 1 hour timeout
    Constraint-based synthesis: 68.62s
     - Lemma instead was: bst(x) => ((bst(rght(x)) => k \in keys(x)) => k <= maxr(x))

20. Theorem: lseg(x,y) => ((key(x) != k /\ n(y) = z) => lseg(x,z))
    Lemma: lseg(x,y) => (n(y) = z => lseg(x,z))
    SyGuS synthesis: 37.91,
     - Lemma instead was: lseg(x, y) => lseg(n(x), n(y))
    Constraint-based synthesis: 7.99s
     - Lemma instead was: lseg(x, y) => lseg(n(x), n(y))

21. Theorem: lst(x) => ((y != nil /\ lseg(x,y)) => k \in keys(x))
    Lemma: lseg(x,y) => ((y != nil /\ lst(x)) => k \in keys(x))
    SyGuS synthesis: 3.79s
     - Lemma instead was: lseg(x, y) => (k \in keys(y) => k \in keys(x))
    Constraint-based synthesis: 60.98s
     - Lemma instead was: lseg(x, y) => (k \in keys(y) => k \in keys(x))

22. Theorem: lseg(x,y) => ((x != nil /\ y != nil /\ lst(x)) => k \in keys(x))
    Lemma: lseg(x,y) => ((y != nil /\ lst(x)) => k \in keys(x))
    SyGuS synthesis: 3.13s
     - Lemma instead was: lseg(x, y) => (k \in keys(y) => k \in keys(x))
    Constraint-based synthesis: 62.75s
     - Lemma instead was: lseg(x, y) => (k \in keys(y) => k \in keys(x))

23. Theorem: rlst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => lst(ret))
    Lemma: rlst(x) => lst(x)
    SyGuS synthesis: 1.32s
    Constraint-based synthesis: 1.59s

24. Theorem: rlst(x) => (black(x) => red_height(x) == black_height(x))
    Lemma: rlst(x) => ((black(x) => red_height(x) == black_height(x)) /\
                       (red(x) => red_height(x) == 1 + black_height(x)))

25. Theorem: rlst(x) => (red(x) => red_height(x) == 1 + black_height(x))
    Lemma: rlst(x) => ((black(x) => red_height(x) == black_height(x)) /\
                       (red(x) => red_height(x) == 1 + black_height(x)))

26. Theorem: odd_lst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => lst(ret))
    Lemma: odd_lst(x) => lst(x)
    SyGuS synthesis: 2.55s
    Constraint-based synthesis: 2.25s
     - Lemma instead was: odd_lst(x) => lst(nxt(x))

27. Theorem: even_lst(x) => (If(x == nil, ret == nil, ret == nxt(x)) => lst(ret))
    Lemma: even_lst(x) => lst(x)
    SyGuS synthesis: 2.54s
    Constraint-based synthesis: 5.07s
     - Lemma instead was: even_lst(x) => (lst(nxt(x)) /\ lst(nxt(nil)))

28. Theorem: lst(x) => (key(x) != k /\ y \in hlst(x) => lst(y))
    Lemma: lst(x) => (y \in hlst(x) => lst(y))
    SyGuS synthesis: 2.41s
    Constraint-based synthesis: 2.59s

29. Theorem: lst(x) => (key(x) != k /\ y \in hlst(x) => lseg(x,y))
    Lemma: lst(x) => (y \in hlst(x) => lseg(x,y))
    SyGuS synthesis: 1270.54s (restricted grammar)
    Constraint-based synthesis: 36.83s

30. Theorem: bst(x) => (If(x == nil, ret == nil, ret == lft(x)) => tree(ret))
    Lemma: bst(x) => tree(x)
    SyGuS synthesis: 4.90s
    Constraint-based synthesis: 8.49s

31. Theorem: reach(x,y) => (tree(x) /\ key(x) != k => tree(y))
    Lemma: reach(x,y) => (tree(x) => tree(y))
    SyGuS synthesis: Timeout after 1 hr
    Constraint-based synthesis: 561.68s

32. Theorem: reach(x,y) => (dag(x) /\ key(x) != k => dag(y))
    Lemma: reach(x,y) => (dag(x) => dag(y))
    SyGuS synthesis: 291.63s
    Constraint-based synthesis: 74.42s

33. Theorem: tree(x) => (reach(x,y) => tree(y))
    Lemma: reach(x,y) => (tree(x) => tree(y))
    SyGuS synthesis: Timeout after 1 hr
    Constraint-based synthesis: 487.81s

34. Theorem: dag(x) => (reach(x,y) => dag(y))
    Lemma: reach(x,y) => (dag(x) => dag(y))
    SyGuS synthesis: 198.01s
    COnstraint-based synthesis: 48.69s

35. Theorem: reach(x,y) => (x != nil /\ y != nil /\ reach(lft(x), y) /\ reach(rght(x), z)
                           => y != z)
    Lemma: reach(x,y) => (y != nil => y \in htree(x))
    SyGuS synthesis: Timeout after 1 hr
    Constraint-based synthesis: 1171.51

36. Theorem: cyclic(x) => cyclic(nxt(x))
    Lemma: lseg(x,y) => (y != nil => lseg(x, nxt(y)))
    SyGuS synthesis: 161.12s
    Constraint-based synthesis: 14.39s

37. Theorem: bst(x) => ((x != nil /\ key(x) != k /\ y == leftmost(x)) => key(y) == minr(x))
    Lemma: bst(x) => (x != nil => key(leftmost(x)) == minr(x))
    SyGuS synthesis: Timeout after 1 hr
    Constraint-based synthesis: 162.49
