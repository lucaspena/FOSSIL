(synth-fun lemma ((x Int) (y Int) (zero Int)) Bool

           ((Start Bool) (B Bool) (I Int) (I1 Int) (I2 Int) (ILeaf Int))

           ((Start Bool (
                   (=> (nat y) B)
                   ))
            (B Bool (
                   (= I I)
                   ))
            (I Int (
               ILeaf
               (plus I1 I1)
               (succ I2)
               ))
            (I2 Int (
               (plus ILeaf ILeaf)
               ))
            (I1 Int (ILeaf
                (succ ILeaf)
                ))
            (ILeaf Int (x y zero))
            )

)


;(synth-fun lemma ((x Int) (y Int) (zero Int)) Bool
;
;           ((Start Bool) (I Int) (I1 Int) (ILeaf Int))
;
;           ((Start Bool (
;                   (=> Start Start)
;                   (= I I)
;                   (nat y)
;                   ))
;            (I Int (I1
;               (plus I1 I1)
;               (succ I1)
;               ))
;            (I1 Int (ILeaf
;                (plus ILeaf ILeaf)
;                (succ ILeaf)
;                ))
;            (ILeaf Int (x y zero))
;            )
;
;)


(synth-fun rswitch () Int

           ((Start Int))

           ((Start Int (0)))

)